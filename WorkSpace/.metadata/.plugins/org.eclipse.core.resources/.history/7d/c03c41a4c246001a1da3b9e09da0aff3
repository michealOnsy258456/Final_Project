/*
 * keypad.c
 *
 *  Created on: Jan 5, 2020
 *      Author: Nezar Ouf
 */

#include "keypad.h"


#if		(N_COL==4)
static uint8 KEYPAD_4x4_adjustKeyNumber(uint8 button_number);
#elif	(N_COL==3)
static uint8 KEYPAD_4x3_adjustKeyNumber(uint8 button_number);
#endif


uint8 KEYPAD_pressedKey() {

	uint8 col, row;
	while(1) {
		for (col = 0; col < N_COL; col++) {
			KEYPAD_DDR = (0b00010000 << col);
			KEYPAD_PORT = ~(0b00010000 << col);
			for (row = 0; row < N_ROW; row++) {
				if (BIT_IS_CLEAR(KEYPAD_PIN, row)){
					while(BIT_IS_CLEAR(KEYPAD_PIN, row);
					#if		(N_COL==4)
					return KEYPAD_4x4_adjustKeyNumber((row * N_COL) + col + 1);
					#elif		(N_COL==3)
					return KEYPAD_4x3_adjustKeyNumber((row * N_COL) + col + 1);
					#endif
				}
			}
		}

	}
}

#if		(N_COL==4)

static uint8 KEYPAD_4x4_adjustKeyNumber(uint8 button_number) {
	switch (button_number) {
	case 1:
		return 7;
	case 2:
		return 8;
	case 3:
		return 9;
	case 4:
		return '%';
	case 5:
		return 4;
	case 6:
		return 5;
	case 7:
		return 6;
	case 8:
		return '*';
	case 9:
		return 1;
	case 10:
		return 2;
	case 11:
		return 3;
	case 12:
		return '-';
	case 13:
		return 13;
	case 14:
		return 0;
	case 15:
		return '=';
	case 16:
		return '+';
	}
	return button_number;
}

#elif		(N_COL==3)

static uint8 KEYPAD_4x3_adjustKeyNumber(uint8 button_number) {
	switch (button_number) {
	case 1:
		return 1;
		break;
	case 2:
		return 2;
		break;
	case 3:
		return 3;
		break;
	case 4:
		return 4;
		break;
	case 5:
		return 5;
		break;
	case 6:
		return 6;
		break;
	case 7:
		return 7;
		break;
	case 8:
		return 8;
		break;
	case 9:
		return 9;
		break;
	case 10:
		return '*';
		break;
	case 11:
		return 0;
		break;
	case 12:
		return '#';
		break;
	}
	return button_number;
}

#endif
